--- a/src/ksp/pc/impls/hypre/hypre.c	2021-04-21 22:49:10.583489851 -0400
+++ b/src/ksp/pc/impls/hypre/hypre.c	2021-04-22 00:46:28.862796574 -0400
@@ -438,8 +438,8 @@
   if (!jac->applyrichardson) {ierr = VecSet(x,0.0);CHKERRQ(ierr);}
   ierr = VecGetArrayRead(b,(const PetscScalar **)&bv);CHKERRQ(ierr);
   ierr = VecGetArrayWrite(x,(PetscScalar **)&xv);CHKERRQ(ierr);
-  VecHYPRE_ParVectorReplacePointer(hjac->b,bv,sbv);
-  VecHYPRE_ParVectorReplacePointer(hjac->x,xv,sxv);
+  PetscStackCallStandard(HYPRE_IJVectorLoad, (hjac->b, bv));
+  PetscStackCallStandard(HYPRE_IJVectorZero, (hjac->x));
 
   PetscStackCallStandard(HYPRE_IJMatrixGetObject,(hjac->ij,(void**)&hmat));
   PetscStackCallStandard(HYPRE_IJVectorGetObject,(hjac->b,(void**)&jbv));
@@ -451,8 +451,7 @@
   if (jac->setup == HYPRE_AMSSetup && jac->ams_beta_is_zero_part) {
     PetscStackCallStandard(HYPRE_AMSProjectOutGradients,(jac->hsolver,jxv));
   }
-  VecHYPRE_ParVectorReplacePointer(hjac->b,sbv,bv);
-  VecHYPRE_ParVectorReplacePointer(hjac->x,sxv,xv);
+  PetscStackCallStandard(HYPRE_IJVectorSave, (hjac->x, xv));
   ierr = VecRestoreArrayWrite(x,(PetscScalar **)&xv);CHKERRQ(ierr);
   ierr = VecRestoreArrayRead(b,(const PetscScalar **)&bv);CHKERRQ(ierr);
   PetscFunctionReturn(0);
