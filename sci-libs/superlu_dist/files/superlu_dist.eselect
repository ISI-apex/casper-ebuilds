# Copyright 2005-2020 Gentoo Authors
# Distributed under the terms of the GNU GPL version 2 or later

DESCRIPTION="Choose version of SuperLU_DIST library"
MAINTAINER="ac@alexeicolin.com"
VERSION="20200508"

# TODO: get the version number somehow
get_ver_maj() {
    echo "6"
}
get_ver() {
    echo "6.3.1"
}

get_link() {
    echo libsuperlu_dist.so.$(get_ver_maj)
}

inherit multilib

find_targets() {
    local opts=(superlu_dist superlu_dist_cuda)

    local libdir="${EROOT}"/usr/$(get_libdir)
    for opt in "${opts[@]}"; do
        for lib in ${libdir}/lib${opt}.so.*; do
            if [[ -f "${lib}" ]]; then
                echo ${opt}
                break
            fi
        done
    done
}

### show action ###

describe_show() {
    echo "Show the current library variant"
}

do_show() {
    write_list_start "Current library variant:"
    local link=${EROOT}/usr/$(get_libdir)/$(get_link)
    if [[ -L "${link}" ]]; then
        local target=$(canonicalise "${link}")
        write_kv_list_entry "${target}" ""
    else
        write_kv_list_entry "(unset)" ""
    fi
}

### list action ###

describe_list() {
    echo "List available variants of SuperLU_DIST library"
}

do_list() {
    local i targets=( $(find_targets) )

    local link=${EROOT}/usr/$(get_libdir)/$(get_link)
    write_list_start "Available library variants:"
    for (( i = 0; i < ${#targets[@]}; i++ )); do
        # highlight the target where the symlink is pointing to
        [[ lib${targets[i]}.so.$(get_ver) = \
            $(basename "$(canonicalise "${link}")") ]] \
            && targets[i]=$(highlight_marker "${targets[i]}")
    done
    write_numbered_list -m "(none found)" "${targets[@]}"
}

### set action ###

describe_set() {
    echo "Set a new variant of SuperLU_DIST library"
}

describe_set_parameters() {
    echo "<target>"
}

describe_set_options() {
    echo "target : Target name or number (from 'list' action)"
}

do_set() {
    [[ -z $1 ]] && die -q "You didn't tell me what to set the symlink to"
    [[ $# -gt 1 ]] && die -q "Too many parameters"
    local target=$1

    local t targets=( $(find_targets) ) found t_name
    if is_number "${target}"; then
        target=$((target-1))
        [[ "${target}" -lt ${#targets[@]} ]] || die -q "selection out of range"
        target=${targets[${target}]}
    fi

    for t in "${targets[@]}"; do
        if [[ "${target}" = "${t}" ]]; then
            found=1
        fi
    done
    [[ -n "${found}" ]] || die -q "invalid target"

    local link=${EROOT}/usr/$(get_libdir)/$(get_link)
    if [[ -L "${link}" ]]; then
        # existing symlink
        unlink "${link}" || die -q "failed to remove existing symlink"
    elif [[ -e "${link}" ]]; then
        die -q "${link} exists but is not a symlink"
    fi

    ln -s "lib${target}.so.$(get_ver)" "${link}" || die -q "failed to create symlink"
}
