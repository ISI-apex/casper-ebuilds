#!@__PREFIX__@/bin/bash

#set -e
shopt -s globstar

if [[ -z "${DIR}" ]]
then
	DIR=@__PREFIX__@/usr/libexec/osu-micro-benchmarks
fi

usage()
{
	echo "USAGE: $0 [inculde_regexp exclude_regexp [command [arg...]]]"
	echo "  Executes given command with args followed by the "
	echo "  path to benchmark executable for each benchmark "
	echo "  whose path matches the given include_regexp and does not "
	echo "  match the given exclude_regexp."
	echo
	echo "  If command not given, then list matching benchmarks."
	echo "  If regexp not given, then list all benchmarks."
}

run() {
	# Tolerate "Resource temporarily unavailable" errors
	set +e
	echo "$@"
	set -e

	"$@"
}

if [[ "$1" = "-h" ||  "$1" = "--help" ]]
then
	usage
	exit 0
fi

LIST=
if [[ "$#" = 0 ]]
then
	LIST=1
elif [[ "$#" -ge 2 ]]
then
	RE_INCLUDE=$1
	RE_EXCLUDE=$2
	shift 2
	if [[ "$#" = 0 ]]
	then
		LIST=1
	fi
fi

if [ -z "${RE_INCLUDE}" ]
then
	RE_INCLUDE=".*"
fi
if [ -z "${RE_EXCLUDE}" ]
then
	RE_EXCLUDE="^$"
fi

# Don't use find because it swallows return code
# find "${DIR}" -type f -executable -path "${RE}" -execdir "$@" {} \;

NUM=0
for bench in ${DIR}/**/*
do
	if [[ -f "${bench}" && -x "${bench}" && "${bench}" =~ ${RE_INCLUDE} && ! "${bench}" =~ ${RE_EXCLUDE} ]]
	then
		if [[ -z "${LIST}" ]]
		then
			run "$@" "${bench}"
		else
			echo "${bench}"
		fi
		NUM=$((NUM + 1))
	fi
done
echo "Successfully processed ${NUM} benchmarks."
